# For JBoss: Avoid to setup Log4J outside $JBOSS_HOME/server/default/deploy/log4j.xml!
# For all other servers: Comment out the Log4J listener in web.xml to activate Log4J.
#	log4j中有五级logger 
#	FATAL 	0 
#	ERROR 	3 
#	WARN 	4 
#	INFO 	6 
#	DEBUG 	7 
#	%m   输出代码中指定的消息
#	%p   输出优先级，即DEBUG，INFO，WARN，ERROR，FATAL 
#	%r   输出自应用启动到输出该log信息耗费的毫秒数 
#	%c   输出所属的类目，通常就是所在类的全名 
#	%t   输出产生该日志事件的线程名 
#	%n   输出一个回车换行符，Windows平台为“\r\n”，Unix平台为“\n” 
#	%d   输出日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式，比如：%d{yyy MMM dd HH:mm:ss , SSS}，输出类似：2002年10月18日  22 ： 10 ： 28 ， 921  
#	%l   输出日志事件的发生位置，包括类目名、发生的线程，以及在代码中的行数。举例：Testlog4.main(TestLog4.java: 10 )  
log4j.rootLogger=INFO , stdout, logfile, errorLog
#, DataBase

log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%d{HH:mm:ss} %p [%c] - %m%n

log4j.appender.logfile=org.apache.log4j.DailyRollingFileAppender
log4j.appender.logfile.File=D:/csmis/log/runLog/jwfm.log
log4j.appender.logfile.layout=org.apache.log4j.PatternLayout
log4j.appender.logfile.layout.ConversionPattern=%d{HH:mm:ss} %p [%c] - %m%n

log4j.appender.errorLog=org.apache.log4j.DailyRollingFileAppender
log4j.appender.errorLog.File=D:/csmis/log/errorLog/jwfm.log
log4j.appender.errorLog.Threshold=ERROR
log4j.appender.errorLog.layout=org.apache.log4j.PatternLayout
log4j.appender.errorLog.layout.ConversionPattern=%d{HH:mm:ss} %p [%l] - %m%n



# 将程序运行错误信息写到数据库表sys_t_error_log中，字段为
#DT_DATE date,VC_THREAD varchar2(50),VC_PRI varchar2(50),VC_LOCATION varchar2(500),VC_MSG varchar2(4000)
log4j.appender.DataBase.Threshold=ERROR
log4j.appender.DataBase=com.csmis.framework.log4j.CsmisDbAppender
#直接使用系统数据库连接池，不需要再指定数据库相关参数
#log4j.appender.DataBase.BufferSize=10
#log4j.appender.DataBase.URL=jdbc:oracle:thin:@localhost:1521:csmisdb
#log4j.appender.DataBase.driver=oracle.jdbc.driver.OracleDriver
#log4j.appender.DataBase.user=csmis
#log4j.appender.DataBase.password=csmis
log4j.appender.DataBase.sql=INSERT INTO sys_t_error_log  VALUES (to_date('%d{yyyy-MM-dd HH:mm:ss}','yyyy-mm-dd hh24:mi:ss'), '%t', '%p', '%l', '%m')
log4j.appender.DataBase.layout=org.apache.log4j.PatternLayout




#R 输出到文件 RollingFileAppender的扩展，可以提供一种日志的备份功能。
log4j.appender.R=org.apache.log4j.RollingFileAppender

#保存一个备份文件
log4j.appender.R.MaxBackupIndex=1




# Log all JDBC calls except for ResultSet calls
log4j.logger.jdbc.audit=OFF
log4j.additivity.jdbc.audit=false

# Log only JDBC calls to ResultSet objects
log4j.logger.jdbc.resultset=OFF
log4j.additivity.jdbc.resultset=false

# Log only the SQL that is executed.
log4j.logger.jdbc.sqlonly=OFF
log4j.additivity.jdbc.sqlonly=false

# Log timing information about the SQL that is executed.
log4j.logger.jdbc.sqltiming=INFO
log4j.additivity.jdbc.sqltiming=true

# Log connection open/close events and connection number dump
log4j.logger.jdbc.connection=OFF
log4j.additivity.jdbc.connection=false


# the appender used for the JDBC API layer call logging above, sql only
log4j.appender.sql=org.apache.log4j.ConsoleAppender
log4j.appender.sql.File=./logs/sql.log
log4j.appender.sql.Append=false
log4j.appender.sql.layout=org.apache.log4j.PatternLayout
log4j.appender.sql.layout.ConversionPattern=-----> %d{yyyy-MM-dd HH:mm:ss.SSS} %m%n%n

# the appender used for the JDBC API layer call logging above, sql timing
log4j.appender.sqltiming=org.apache.log4j.FileAppender
log4j.appender.sqltiming.File=./logs/sqltiming.log
log4j.appender.sqltiming.Append=false
log4j.appender.sqltiming.layout=org.apache.log4j.PatternLayout
log4j.appender.sqltiming.layout.ConversionPattern=-----> %d{yyyy-MM-dd HH:mm:ss.SSS} %m%n%n

# the appender used for the JDBC API layer call logging above
log4j.appender.jdbc=org.apache.log4j.ConsoleAppender
log4j.appender.jdbc.File=./logs/jdbc.log
log4j.appender.jdbc.Append=false
log4j.appender.jdbc.layout=org.apache.log4j.PatternLayout
log4j.appender.jdbc.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss.SSS} %m%n

# the appender used for the JDBC Connection open and close events
log4j.appender.connection=org.apache.log4j.FileAppender
log4j.appender.connection.File=./logs/connection.log
log4j.appender.connection.Append=false
log4j.appender.connection.layout=org.apache.log4j.PatternLayout
log4j.appender.connection.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss.SSS} %m%n